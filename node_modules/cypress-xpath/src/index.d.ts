declare namespace Cypress {
  interface Chainable<Subject> {
    xpath<E extends Node = HTMLElement>(selector: string, options?: Partial<Loggable & Timeoutable>): Chainable<JQuery<E>>;
    chooseHeader(headerName: string): Chainable<any>;
    visitKpasURL(): Chainable<any>;
    visitVIGsite(): Chainable<any>;
    convertTextToHref(hyperLinkText: string): Chainable<any>;
    verifyVisibilityOfElementUponMouseOver(elementName: string, classNameOfVisibleElement: string): Chainable<any>;
    getText(selector: string): Chainable<string>;
    getValueOfField(fieldName: string): Chainable<string>;
    getValueOfFieldDependingOnItsIndex(fieldName: string, index: number): Chainable<string>;
    iClickAway(): Chainable<void>;
    waitForPageLoaded(): Chainable<void>;
    verifyAllLinksInPageAreOk(): Chainable<void>;

    
  }

  interface Chainable<Subject> {
    /**
     * Visit the main website.
     * @example
     * cy.visitMainWebsite()
     */
    visitMainWebsite(): Chainable<void>;

    /**
     * Visit the BusinessMax page using a base URL and path from environment variables.
     * @example
     * cy.visitBusinessMax()
     */
    visitBusinessMax(): Chainable<void>;

    /**
     * Get the value of a textarea field by name.
     * @param textAreaName - The name of the textarea field.
     * @example
     * cy.getValueOfTextArea('comment')
     *   .should('eq', 'expected value');
     */
    getValueOfTextArea(textAreaName: string): Chainable<string>;
}
declare namespace Cypress {
  interface Chainable {
    softAssert(condition: boolean, message?: string): void;
    softAssertAll(): void;
  }
}
}
